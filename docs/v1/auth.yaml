tags:
  - name: Authentication
    description: Authentication endpoints
paths:
  /auth/login-user:
    post:
      tags:
        - Authentication
      summary: Login as user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: lodehej885@abudat.com
                password: stRonGpa$$Word
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                message: Authenticated
                token: >-
                  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjhmYjhlMmRmLTBlOWEtNGYyNy1iMjAyLTJmZjU0YjY0MmUwMSIsInJvbGUiOiJ1c2VyIiwiaWF0IjoxNjYzNTQ2NTU1LCJleHAiOjE2NjM1NTAxNTV9.7Z99i8NC18obsQ98D38N1-lXILcJWdAmpmQHOoj1eLA
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
              example:
                errors: >-
                  Invalid email address at field email / Password is required at
                  field password /
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
              example:
                errors: Email or password incorrect
  /auth/register-user:
    post:
      tags:
        - Authentication
      summary: Register as doctor
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                fullName: Mohab Alnajjar
                email: lodehej885@abudat.com
                password: mOhasbD123*&^
                phone: "01865486248"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                message: User registerd successfuly. Please, check you email
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: Duplicted email
                  value:
                    message: Email already in use
                example-1:
                  summary: Duplicted phone
                  value:
                    message: Phone number already in use
                example-2:
                  summary: Need confirmation
                  value:
                    message: User already registerd and need email confirmation
                example-3:
                  summary: Invalid input data
                  value:
                    errors: >-
                      Invalid email address at field email / Password is
                      required at field password /
  /auth/confirm/{token}:
    get:
      tags:
        - Authentication
      summary: Email confirmation
      parameters:
        - in: path
          name: token
          schema:
            type: string
          required: true
          description: email confirmation tokrn
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjZjZTk3ZmIzLTYyNzQtNDBlNS04ZmI0LTRlZThkZmJhMzg1ZSIsInJvbGUiOiJ1c2VyIiwiaWF0IjoxNjY2OTk4NjU5fQ.uTJsD8u9PAWIaCGYyOZGPFPh8TKM1CHwnzFpRaPbSyE
      responses:
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
              example:
                errors: Not authenticated
        undefined:
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: Ok
                  value:
                    message: Email confirmed successfuly
                example-1:
                  summary: User doesn't exists
                  value:
                    errors: The user you try to confirm doesn't exists
            text/plain:
              schema:
                type: string
              example: null
